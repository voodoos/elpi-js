% elpi: embedded lambda prolog interpreter
% license: GNU Lesser General Public License Version 2.1 or later

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This file populates the grammar of ELPI and is always loaded first
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

prefix ~  256.       prefix i~  256.     prefix r~  256.
infixl mod 160.
infixl div 160.
infixl *  160.       infixl i*  160.     infixl r*  160.
infixl /  160.
infixl ^  150.
infixl +  150.       infixl i+  150.     infixl r+  150.
infixl -  150.       infixl i-  150.     infixl r-  150.
infixr :: 140.
infix  @  135.
infix  >  130.       infix  i>  130.     infix  r>  130.     infix  s>  130.
infix  <  130.       infix  i<  130.     infix  r<  130.     infix  s<  130.
infix  >= 130.       infix  i>= 130.     infix  r>= 130.     infix  s>= 130.
infix  =< 130.       infix  i=< 130.     infix  r=< 130.     infix  s=< 130.
infix  =  130.
infix  is 130.
infixr as 129.
infixr => 129.
infixr &  120.
infix  ?- 115.
% infixr ,  110.  This is now built-in to parse it as n-ary
infixr ;  100.
infixl :- 0.
infixr -> 116.

% Convenience symbols for associative lists
infix `-> 141.
infix `: 141.

